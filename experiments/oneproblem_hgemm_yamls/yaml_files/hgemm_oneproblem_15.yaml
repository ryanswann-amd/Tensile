GlobalParameters:
  MinimumRequiredVersion: 4.36.0
  NumElementsToValidate: 0
  BoundsCheck: False
  KernelTime: False
  DataInitTypeAlpha: 1
  DataInitTypeBeta: 1
  DataInitTypeA: 12
  DataInitTypeB: 13
  MaxWorkspaceSize: 134217728
  NumWarmups: 20
  EnqueuesPerSync: 50
  # PrintSolutionRejectionReason: True

BenchmarkProblems:
  -
    - # ProblemType
      OperationType: GEMM
      ComputeDataType: s
      DataType: h
      DestDataType: h
      HighPrecisionAccumulate: True
      TransposeA: False
      TransposeB: True
      UseBeta: True
      Batched: True

    - # Grid
      InitialSolutionParameters:
      BenchmarkCommonParameters:
      ForkParameters:
        - 1LDSBuffer: [0, 1]
        # - AssertFree0ElementMultiple: [8]
        # - AssertFree1ElementMultiple: [8]
        # - AssertMinApproxSize: [3]
        # - AssertSizeGreaterThan: [{3: 256}]
        # - AssertStrideAEqual: [{0: 1}]
        # - AssertStrideBEqual: [{0: 1}]
        # - AssertStrideCEqual: [{0: 1}]
        # - AssertStrideDEqual: [{0: 1}]
        # - AssertSummationElementMultiple: [64]
        # - ClusterLocalRead: [False, True]
        - ClusterLocalRead: [True]
        - EdgeType: ['ShiftPtr']
        # - ExpandPointerSwap: [0, 1]
        - ExpandPointerSwap: [1]
        - ExtraLatencyForLR: [0, 12] ###
        # - ForceStoreSC1: [False, True]
        - ForceStoreSC1: [True]
        - GlobalLoadVectorWidthA: [8]
        - GlobalLoadVectorWidthB: [8]
        - KernelLanguage: ['Assembly']
        # - LdsBlockSizePerPadA: [0]
        # - LdsBlockSizePerPadB: [128]
        - LdsPadA: [0]
        - LdsPadB: [0]
        - LocalReadVectorWidth: [4, 8]
        - MatrixInstruction:
          - [16, 16, 16, 1, 1, 16, 4, 2, 1]
          - [16, 16, 16, 1, 1, 16, 4, 1, 4]
          - [16, 16, 16, 1, 1, 16, 4, 1, 2]
          - [16, 16, 16, 1, 1, 16, 4, 1, 1]
          - [16, 16, 16, 1, 1, 16, 2, 4, 4]
          - [16, 16, 16, 1, 1, 16, 2, 4, 2]
          - [16, 16, 16, 1, 1, 16, 2, 4, 1]
          - [16, 16, 16, 1, 1, 16, 2, 2, 4]
          - [16, 16, 16, 1, 1, 16, 2, 2, 2]
          - [16, 16, 16, 1, 1, 16, 2, 2, 1]
          - [16, 16, 16, 1, 1, 16, 2, 1, 4]
          - [16, 16, 16, 1, 1, 16, 2, 1, 2]
          - [16, 16, 16, 1, 1, 16, 2, 1, 1]
          - [16, 16, 16, 1, 1, 16, 1, 4, 4]
          - [16, 16, 16, 1, 1, 16, 1, 4, 2]
          - [16, 16, 16, 1, 1, 16, 1, 4, 1]
          - [16, 16, 16, 1, 1, 16, 1, 2, 4]
          - [16, 16, 16, 1, 1, 16, 1, 2, 2]
          - [16, 16, 16, 1, 1, 16, 1, 2, 1]
          - [16, 16, 16, 1, 1, 16, 1, 1, 4]
          - [16, 16, 16, 1, 1, 16, 1, 1, 2]
          - [16, 16, 16, 1, 1, 16, 1, 1, 1]
          - [16, 16, 16, 1, 1, 8, 64, 4, 4]
          - [16, 16, 16, 1, 1, 8, 64, 4, 2]
          - [16, 16, 16, 1, 1, 8, 64, 4, 1]
          - [16, 16, 16, 1, 1, 8, 64, 2, 4]
          - [16, 16, 16, 1, 1, 8, 64, 2, 2]
          - [16, 16, 16, 1, 1, 8, 64, 2, 1]
          - [16, 16, 16, 1, 1, 8, 64, 1, 4]
          - [16, 16, 16, 1, 1, 8, 64, 1, 2]
          - [16, 16, 16, 1, 1, 8, 64, 1, 1]
          - [16, 16, 16, 1, 1, 8, 32, 4, 4]
          - [16, 16, 16, 1, 1, 8, 32, 4, 2]
          - [16, 16, 16, 1, 1, 8, 32, 4, 1]
          - [16, 16, 16, 1, 1, 8, 32, 2, 4]
          - [16, 16, 16, 1, 1, 8, 32, 2, 2]
          - [16, 16, 16, 1, 1, 8, 32, 2, 1]
          - [16, 16, 16, 1, 1, 8, 32, 1, 4]
          - [16, 16, 16, 1, 1, 8, 32, 1, 2]
          - [16, 16, 16, 1, 1, 8, 32, 1, 1]
          - [16, 16, 16, 1, 1, 8, 16, 4, 4]
          - [16, 16, 16, 1, 1, 8, 16, 4, 2]
          - [16, 16, 16, 1, 1, 8, 16, 4, 1]
          - [16, 16, 16, 1, 1, 8, 16, 2, 4]
          - [16, 16, 16, 1, 1, 8, 16, 2, 2]
          - [16, 16, 16, 1, 1, 8, 16, 2, 1]
          - [16, 16, 16, 1, 1, 8, 16, 1, 4]
          - [16, 16, 16, 1, 1, 8, 16, 1, 2]
          - [16, 16, 16, 1, 1, 8, 16, 1, 1]
          - [16, 16, 16, 1, 1, 8, 8, 4, 4]
          - [16, 16, 16, 1, 1, 8, 8, 4, 2]
          - [16, 16, 16, 1, 1, 8, 8, 4, 1]
          - [16, 16, 16, 1, 1, 8, 8, 2, 4]
          - [16, 16, 16, 1, 1, 8, 8, 2, 2]
          - [16, 16, 16, 1, 1, 8, 8, 2, 1]
          - [16, 16, 16, 1, 1, 8, 8, 1, 4]
          - [16, 16, 16, 1, 1, 8, 8, 1, 2]
          - [16, 16, 16, 1, 1, 8, 8, 1, 1]
          - [16, 16, 16, 1, 1, 8, 4, 4, 4]
          - [16, 16, 16, 1, 1, 8, 4, 4, 2]
          - [16, 16, 16, 1, 1, 8, 4, 4, 1]
          - [16, 16, 16, 1, 1, 8, 4, 2, 4]
          - [16, 16, 16, 1, 1, 8, 4, 2, 2]
          - [16, 16, 16, 1, 1, 8, 4, 2, 1]
          - [16, 16, 16, 1, 1, 8, 4, 1, 4]
          - [16, 16, 16, 1, 1, 8, 4, 1, 2]
          - [16, 16, 16, 1, 1, 8, 4, 1, 1]
          - [16, 16, 16, 1, 1, 8, 2, 4, 4]
          - [16, 16, 16, 1, 1, 8, 2, 4, 2]
          - [16, 16, 16, 1, 1, 8, 2, 4, 1]
          - [16, 16, 16, 1, 1, 8, 2, 2, 4]
          - [16, 16, 16, 1, 1, 8, 2, 2, 2]
          - [16, 16, 16, 1, 1, 8, 2, 2, 1]
          - [16, 16, 16, 1, 1, 8, 2, 1, 4]
          - [16, 16, 16, 1, 1, 8, 2, 1, 2]
          - [16, 16, 16, 1, 1, 8, 2, 1, 1]
          - [16, 16, 16, 1, 1, 8, 1, 4, 4]
          - [16, 16, 16, 1, 1, 8, 1, 4, 2]
          - [16, 16, 16, 1, 1, 8, 1, 4, 1]
          - [16, 16, 16, 1, 1, 8, 1, 2, 4]
          - [16, 16, 16, 1, 1, 8, 1, 2, 2]
          - [16, 16, 16, 1, 1, 8, 1, 2, 1]
          - [16, 16, 16, 1, 1, 8, 1, 1, 4]
          - [16, 16, 16, 1, 1, 8, 1, 1, 2]
          - [16, 16, 16, 1, 1, 8, 1, 1, 1]
          - [16, 16, 16, 1, 1, 4, 64, 4, 4]
          - [16, 16, 16, 1, 1, 4, 64, 4, 2]
          - [16, 16, 16, 1, 1, 4, 64, 4, 1]
          - [16, 16, 16, 1, 1, 4, 64, 2, 4]
          - [16, 16, 16, 1, 1, 4, 64, 2, 2]
          - [16, 16, 16, 1, 1, 4, 64, 2, 1]
          - [16, 16, 16, 1, 1, 4, 64, 1, 4]
          - [16, 16, 16, 1, 1, 4, 64, 1, 2]
          - [16, 16, 16, 1, 1, 4, 64, 1, 1]
          - [16, 16, 16, 1, 1, 4, 32, 4, 4]
          - [16, 16, 16, 1, 1, 4, 32, 4, 2]
          - [16, 16, 16, 1, 1, 4, 32, 4, 1]
          - [16, 16, 16, 1, 1, 4, 32, 2, 4]
          - [16, 16, 16, 1, 1, 4, 32, 2, 2]
          - [16, 16, 16, 1, 1, 4, 32, 2, 1]
        # - NonTemporalC: [0, 3, 4, 7]
        # - NonTemporalD: [0, 3, 4, 7]
        - NonTemporalD: [4]
        - NumLoadsCoalescedB: [1, 2]
        # - NumLoadsCoalescedB: [1]
        - OptPreLoopVmcnt: [0]
        - PrefetchGlobalRead: [2]
        - ScheduleIterAlg: [3]
        # - SourceSwap: [False, True]
        - SourceSwap: [True]
        # - StaggerU: [0, 8, 32]
        - StaggerU: [0]
        #- StaggerUStride: [128]
        - StorePriorityOpt: [True]
        # - StoreRemapVectorWidth: [0, 1, 2, 4, 8]
        - StreamK: [3]
        #- StreamKXCCMapping: [0, 1]
        #- StreamKFullTiles: [0, 1]
        # - TransposeLDS: [0, 1]
        - TransposeLDS: [0]
        # - UnrollMajorLDSB: [False, True]
        - UnrollMajorLDSB: [False]
        # - VectorAtomicWidth: [1, 2]
        # - VgprForLocalReadPacking: [False, True]
        - VgprForLocalReadPacking: [True]
        # - WaveSeparateGlobalReadA: [0, 1]
        - WaveSeparateGlobalReadA: [1]
        # - WaveSeparateGlobalReadB: [0, 1]
        - WaveSeparateGlobalReadB: [1]
        # - WorkGroupMapping: [1, 2, 8, 16, 32, 64]
        # - WorkGroupMapping: [-32, -16, -8, -1, 1, 8, 16, 32]
        - WorkGroupMapping: [0, 8]
        - Groups:
          - - StoreVectorWidth: 1
              VectorWidth: 1
              VectorWidthB: 1
            - StoreVectorWidth: 2
              VectorWidth: 2
              VectorWidthB: 2
            - StoreVectorWidth: 4
              VectorWidth: 4
              VectorWidthB: 4
          - - DepthU: 16
              PrefetchLocalRead: 1
            - DepthU: 32
              PrefetchLocalRead: 3
            - DepthU: 64
              PrefetchLocalRead: 5
          # - - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 8,8, 2,2]
          #   - 1LDSBuffer: 1
          #     MatrixInstruction: [16,16,16,1, 1, 8,8, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 4,8, 2,2]
          #   - 1LDSBuffer: 1
          #     MatrixInstruction: [16,16,16,1, 1, 4,8, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 8,4, 2,2]
          #   - 1LDSBuffer: 1
          #     MatrixInstruction: [16,16,16,1, 1, 8,4, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 2,8, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 8,2, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 1,8, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 8,1, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 4,4, 2,2]
          #   - 1LDSBuffer: 1
          #     MatrixInstruction: [16,16,16,1, 1, 4,4, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 2,4, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 4,2, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 1,4, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 4,1, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 2,2, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 1,2, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 2,1, 2,2]
          #   - 1LDSBuffer: 0
          #     MatrixInstruction: [16,16,16,1, 1, 1,1, 2,2]
      BenchmarkJoinParameters:
      BenchmarkFinalParameters:
        - ProblemSizes:
          - Exact: [128, 128, 1, 128]
          - Exact: [128, 128, 1, 256]
          - Exact: [128, 128, 1, 512]
          - Exact: [128, 128, 1, 1024]
          - Exact: [128, 128, 1, 2048]
          - Exact: [128, 128, 1, 4096]
          - Exact: [128, 128, 1, 8192]
          - Exact: [128, 256, 1, 128]
          - Exact: [128, 256, 1, 256]
          - Exact: [128, 256, 1, 512]
          - Exact: [128, 256, 1, 1024]
          - Exact: [128, 256, 1, 2048]
          - Exact: [128, 256, 1, 4096]
          - Exact: [128, 256, 1, 8192]
          - Exact: [128, 512, 1, 128]
          - Exact: [128, 512, 1, 256]
          - Exact: [128, 512, 1, 512]
          - Exact: [128, 512, 1, 1024]
          - Exact: [128, 512, 1, 2048]
          - Exact: [128, 512, 1, 4096]
          - Exact: [128, 512, 1, 8192]
          - Exact: [128, 1024, 1, 128]
          - Exact: [128, 1024, 1, 256]
          - Exact: [128, 1024, 1, 512]
          - Exact: [128, 1024, 1, 1024]
          - Exact: [128, 1024, 1, 2048]
          - Exact: [128, 1024, 1, 4096]
          - Exact: [128, 1024, 1, 8192]
          - Exact: [128, 2048, 1, 128]
          - Exact: [128, 2048, 1, 256]
          - Exact: [128, 2048, 1, 512]
          - Exact: [128, 2048, 1, 1024]
          - Exact: [128, 2048, 1, 2048]
          - Exact: [128, 2048, 1, 4096]
          - Exact: [128, 2048, 1, 8192]
          - Exact: [128, 4096, 1, 128]
          - Exact: [128, 4096, 1, 256]
          - Exact: [128, 4096, 1, 512]
          - Exact: [128, 4096, 1, 1024]
          - Exact: [128, 4096, 1, 2048]
          - Exact: [128, 4096, 1, 4096]
          - Exact: [128, 4096, 1, 8192]
          - Exact: [128, 8192, 1, 128]
          - Exact: [128, 8192, 1, 256]
          - Exact: [128, 8192, 1, 512]
          - Exact: [128, 8192, 1, 1024]
          - Exact: [128, 8192, 1, 2048]
          - Exact: [128, 8192, 1, 4096]
          - Exact: [128, 8192, 1, 8192]
          # - Exact: [256, 128, 1, 128]
          # - Exact: [256, 128, 1, 256]
          # - Exact: [256, 128, 1, 512]
          # - Exact: [256, 128, 1, 1024]
          # - Exact: [256, 128, 1, 2048]
          # - Exact: [256, 128, 1, 4096]
          # - Exact: [256, 128, 1, 8192]
          # - Exact: [256, 256, 1, 128]
          # - Exact: [256, 256, 1, 256]
          # - Exact: [256, 256, 1, 512]
          # - Exact: [256, 256, 1, 1024]
          # - Exact: [256, 256, 1, 2048]
          # - Exact: [256, 256, 1, 4096]
          # - Exact: [256, 256, 1, 8192]
          # - Exact: [256, 512, 1, 128]
          # - Exact: [256, 512, 1, 256]
          # - Exact: [256, 512, 1, 512]
          # - Exact: [256, 512, 1, 1024]
          # - Exact: [256, 512, 1, 2048]
          # - Exact: [256, 512, 1, 4096]
          # - Exact: [256, 512, 1, 8192]
          # - Exact: [256, 1024, 1, 128]
          # - Exact: [256, 1024, 1, 256]
          # - Exact: [256, 1024, 1, 512]
          # - Exact: [256, 1024, 1, 1024]
          # - Exact: [256, 1024, 1, 2048]
          # - Exact: [256, 1024, 1, 4096]
          # - Exact: [256, 1024, 1, 8192]
          # - Exact: [256, 2048, 1, 128]
          # - Exact: [256, 2048, 1, 256]
          # - Exact: [256, 2048, 1, 512]
          # - Exact: [256, 2048, 1, 1024]
          # - Exact: [256, 2048, 1, 2048]
          # - Exact: [256, 2048, 1, 4096]
          # - Exact: [256, 2048, 1, 8192]
          # - Exact: [256, 4096, 1, 128]
          # - Exact: [256, 4096, 1, 256]
          # - Exact: [256, 4096, 1, 512]
          # - Exact: [256, 4096, 1, 1024]
          # - Exact: [256, 4096, 1, 2048]
          # - Exact: [256, 4096, 1, 4096]
          # - Exact: [256, 4096, 1, 8192]
          # - Exact: [256, 8192, 1, 128]
          # - Exact: [256, 8192, 1, 256]
          # - Exact: [256, 8192, 1, 512]
          # - Exact: [256, 8192, 1, 1024]
          # - Exact: [256, 8192, 1, 2048]
          # - Exact: [256, 8192, 1, 4096]
          # - Exact: [256, 8192, 1, 8192]
          # - Exact: [512, 128, 1, 128]
          # - Exact: [512, 128, 1, 256]
          # - Exact: [512, 128, 1, 512]
          # - Exact: [512, 128, 1, 1024]
          # - Exact: [512, 128, 1, 2048]
          # - Exact: [512, 128, 1, 4096]
          # - Exact: [512, 128, 1, 8192]
          # - Exact: [512, 256, 1, 128]
          # - Exact: [512, 256, 1, 256]
          # - Exact: [512, 256, 1, 512]
          # - Exact: [512, 256, 1, 1024]
          # - Exact: [512, 256, 1, 2048]
          # - Exact: [512, 256, 1, 4096]
          # - Exact: [512, 256, 1, 8192]
          # - Exact: [512, 512, 1, 128]
          # - Exact: [512, 512, 1, 256]
          # - Exact: [512, 512, 1, 512]
          # - Exact: [512, 512, 1, 1024]
          # - Exact: [512, 512, 1, 2048]
          # - Exact: [512, 512, 1, 4096]
          # - Exact: [512, 512, 1, 8192]
          # - Exact: [512, 1024, 1, 128]
          # - Exact: [512, 1024, 1, 256]
          # - Exact: [512, 1024, 1, 512]
          # - Exact: [512, 1024, 1, 1024]
          # - Exact: [512, 1024, 1, 2048]
          # - Exact: [512, 1024, 1, 4096]
          # - Exact: [512, 1024, 1, 8192]
          # - Exact: [512, 2048, 1, 128]
          # - Exact: [512, 2048, 1, 256]
          # - Exact: [512, 2048, 1, 512]
          # - Exact: [512, 2048, 1, 1024]
          # - Exact: [512, 2048, 1, 2048]
          # - Exact: [512, 2048, 1, 4096]
          # - Exact: [512, 2048, 1, 8192]
          # - Exact: [512, 4096, 1, 128]
          # - Exact: [512, 4096, 1, 256]
          # - Exact: [512, 4096, 1, 512]
          # - Exact: [512, 4096, 1, 1024]
          # - Exact: [512, 4096, 1, 2048]
          # - Exact: [512, 4096, 1, 4096]
          # - Exact: [512, 4096, 1, 8192]
          # - Exact: [512, 8192, 1, 128]
          # - Exact: [512, 8192, 1, 256]
          # - Exact: [512, 8192, 1, 512]
          # - Exact: [512, 8192, 1, 1024]
          # - Exact: [512, 8192, 1, 2048]
          # - Exact: [512, 8192, 1, 4096]
          # - Exact: [512, 8192, 1, 8192]
          # - Exact: [1024, 128, 1, 128]
          # - Exact: [1024, 128, 1, 256]
          # - Exact: [1024, 128, 1, 512]
          # - Exact: [1024, 128, 1, 1024]
          # - Exact: [1024, 128, 1, 2048]
          # - Exact: [1024, 128, 1, 4096]
          # - Exact: [1024, 128, 1, 8192]
          # - Exact: [1024, 256, 1, 128]
          # - Exact: [1024, 256, 1, 256]
          # - Exact: [1024, 256, 1, 512]
          # - Exact: [1024, 256, 1, 1024]
          # - Exact: [1024, 256, 1, 2048]
          # - Exact: [1024, 256, 1, 4096]
          # - Exact: [1024, 256, 1, 8192]
          # - Exact: [1024, 512, 1, 128]
          # - Exact: [1024, 512, 1, 256]
          # - Exact: [1024, 512, 1, 512]
          # - Exact: [1024, 512, 1, 1024]
          # - Exact: [1024, 512, 1, 2048]
          # - Exact: [1024, 512, 1, 4096]
          # - Exact: [1024, 512, 1, 8192]
          # - Exact: [1024, 1024, 1, 128]
          # - Exact: [1024, 1024, 1, 256]
          # - Exact: [1024, 1024, 1, 512]
          # - Exact: [1024, 1024, 1, 1024]
          # - Exact: [1024, 1024, 1, 2048]
          # - Exact: [1024, 1024, 1, 4096]
          # - Exact: [1024, 1024, 1, 8192]
          # - Exact: [1024, 2048, 1, 128]
          # - Exact: [1024, 2048, 1, 256]
          # - Exact: [1024, 2048, 1, 512]
          # - Exact: [1024, 2048, 1, 1024]
          # - Exact: [1024, 2048, 1, 2048]
          # - Exact: [1024, 2048, 1, 4096]
          # - Exact: [1024, 2048, 1, 8192]
          # - Exact: [1024, 4096, 1, 128]
          # - Exact: [1024, 4096, 1, 256]
          # - Exact: [1024, 4096, 1, 512]
          # - Exact: [1024, 4096, 1, 1024]
          # - Exact: [1024, 4096, 1, 2048]
          # - Exact: [1024, 4096, 1, 4096]
          # - Exact: [1024, 4096, 1, 8192]
          # - Exact: [1024, 8192, 1, 128]
          # - Exact: [1024, 8192, 1, 256]
          # - Exact: [1024, 8192, 1, 512]
          # - Exact: [1024, 8192, 1, 1024]
          # - Exact: [1024, 8192, 1, 2048]
          # - Exact: [1024, 8192, 1, 4096]
          # - Exact: [1024, 8192, 1, 8192]
          # - Exact: [2048, 128, 1, 128]
          # - Exact: [2048, 128, 1, 256]
          # - Exact: [2048, 128, 1, 512]
          # - Exact: [2048, 128, 1, 1024]
          # - Exact: [2048, 128, 1, 2048]
          # - Exact: [2048, 128, 1, 4096]
          # - Exact: [2048, 128, 1, 8192]
          # - Exact: [2048, 256, 1, 128]
          # - Exact: [2048, 256, 1, 256]
          # - Exact: [2048, 256, 1, 512]
          # - Exact: [2048, 256, 1, 1024]
          # - Exact: [2048, 256, 1, 2048]
          # - Exact: [2048, 256, 1, 4096]
          # - Exact: [2048, 256, 1, 8192]
          # - Exact: [2048, 512, 1, 128]
          # - Exact: [2048, 512, 1, 256]
          # - Exact: [2048, 512, 1, 512]
          # - Exact: [2048, 512, 1, 1024]
          # - Exact: [2048, 512, 1, 2048]
          # - Exact: [2048, 512, 1, 4096]
          # - Exact: [2048, 512, 1, 8192]
          # - Exact: [2048, 1024, 1, 128]
          # - Exact: [2048, 1024, 1, 256]
          # - Exact: [2048, 1024, 1, 512]
          # - Exact: [2048, 1024, 1, 1024]
          # - Exact: [2048, 1024, 1, 2048]
          # - Exact: [2048, 1024, 1, 4096]
          # - Exact: [2048, 1024, 1, 8192]
          # - Exact: [2048, 2048, 1, 128]
          # - Exact: [2048, 2048, 1, 256]
          # - Exact: [2048, 2048, 1, 512]
          # - Exact: [2048, 2048, 1, 1024]
          # - Exact: [2048, 2048, 1, 2048]
          # - Exact: [2048, 2048, 1, 4096]
          # - Exact: [2048, 2048, 1, 8192]
          # - Exact: [2048, 4096, 1, 128]
          # - Exact: [2048, 4096, 1, 256]
          # - Exact: [2048, 4096, 1, 512]
          # - Exact: [2048, 4096, 1, 1024]
          # - Exact: [2048, 4096, 1, 2048]
          # - Exact: [2048, 4096, 1, 4096]
          # - Exact: [2048, 4096, 1, 8192]
          # - Exact: [2048, 8192, 1, 128]
          # - Exact: [2048, 8192, 1, 256]
          # - Exact: [2048, 8192, 1, 512]
          # - Exact: [2048, 8192, 1, 1024]
          # - Exact: [2048, 8192, 1, 2048]
          # - Exact: [2048, 8192, 1, 4096]
          # - Exact: [2048, 8192, 1, 8192]
          # - Exact: [4096, 128, 1, 128]
          # - Exact: [4096, 128, 1, 256]
          # - Exact: [4096, 128, 1, 512]
          # - Exact: [4096, 128, 1, 1024]
          # - Exact: [4096, 128, 1, 2048]
          # - Exact: [4096, 128, 1, 4096]
          # - Exact: [4096, 128, 1, 8192]
          # - Exact: [4096, 256, 1, 128]
          # - Exact: [4096, 256, 1, 256]
          # - Exact: [4096, 256, 1, 512]
          # - Exact: [4096, 256, 1, 1024]
          # - Exact: [4096, 256, 1, 2048]
          # - Exact: [4096, 256, 1, 4096]
          # - Exact: [4096, 256, 1, 8192]
          # - Exact: [4096, 512, 1, 128]
          # - Exact: [4096, 512, 1, 256]
          # - Exact: [4096, 512, 1, 512]
          # - Exact: [4096, 512, 1, 1024]
          # - Exact: [4096, 512, 1, 2048]
          # - Exact: [4096, 512, 1, 4096]
          # - Exact: [4096, 512, 1, 8192]
          # - Exact: [4096, 1024, 1, 128]
          # - Exact: [4096, 1024, 1, 256]
          # - Exact: [4096, 1024, 1, 512]
          # - Exact: [4096, 1024, 1, 1024]
          # - Exact: [4096, 1024, 1, 2048]
          # - Exact: [4096, 1024, 1, 4096]
          # - Exact: [4096, 1024, 1, 8192]
          # - Exact: [4096, 2048, 1, 128]
          # - Exact: [4096, 2048, 1, 256]
          # - Exact: [4096, 2048, 1, 512]
          # - Exact: [4096, 2048, 1, 1024]
          # - Exact: [4096, 2048, 1, 2048]
          # - Exact: [4096, 2048, 1, 4096]
          # - Exact: [4096, 2048, 1, 8192]
          # - Exact: [4096, 4096, 1, 128]
          # - Exact: [4096, 4096, 1, 256]
          # - Exact: [4096, 4096, 1, 512]
          # - Exact: [4096, 4096, 1, 1024]
          # - Exact: [4096, 4096, 1, 2048]
          # - Exact: [4096, 4096, 1, 4096]
          # - Exact: [4096, 4096, 1, 8192]
          # - Exact: [4096, 8192, 1, 128]
          # - Exact: [4096, 8192, 1, 256]
          # - Exact: [4096, 8192, 1, 512]
          # - Exact: [4096, 8192, 1, 1024]
          # - Exact: [4096, 8192, 1, 2048]
          # - Exact: [4096, 8192, 1, 4096]
          # - Exact: [4096, 8192, 1, 8192]
          # - Exact: [8192, 128, 1, 128]
          # - Exact: [8192, 128, 1, 256]
          # - Exact: [8192, 128, 1, 512]
          # - Exact: [8192, 128, 1, 1024]
          # - Exact: [8192, 128, 1, 2048]
          # - Exact: [8192, 128, 1, 4096]
          # - Exact: [8192, 128, 1, 8192]
          # - Exact: [8192, 256, 1, 128]
          # - Exact: [8192, 256, 1, 256]
          # - Exact: [8192, 256, 1, 512]
          # - Exact: [8192, 256, 1, 1024]
          # - Exact: [8192, 256, 1, 2048]
          # - Exact: [8192, 256, 1, 4096]
          # - Exact: [8192, 256, 1, 8192]
          # - Exact: [8192, 512, 1, 128]
          # - Exact: [8192, 512, 1, 256]
          # - Exact: [8192, 512, 1, 512]
          # - Exact: [8192, 512, 1, 1024]
          # - Exact: [8192, 512, 1, 2048]
          # - Exact: [8192, 512, 1, 4096]
          # - Exact: [8192, 512, 1, 8192]
          # - Exact: [8192, 1024, 1, 128]
          # - Exact: [8192, 1024, 1, 256]
          # - Exact: [8192, 1024, 1, 512]
          # - Exact: [8192, 1024, 1, 1024]
          # - Exact: [8192, 1024, 1, 2048]
          # - Exact: [8192, 1024, 1, 4096]
          # - Exact: [8192, 1024, 1, 8192]
          # - Exact: [8192, 2048, 1, 128]
          # - Exact: [8192, 2048, 1, 256]
          # - Exact: [8192, 2048, 1, 512]
          # - Exact: [8192, 2048, 1, 1024]
          # - Exact: [8192, 2048, 1, 2048]
          # - Exact: [8192, 2048, 1, 4096]
          # - Exact: [8192, 2048, 1, 8192]
          # - Exact: [8192, 4096, 1, 128]
          # - Exact: [8192, 4096, 1, 256]
          # - Exact: [8192, 4096, 1, 512]
          # - Exact: [8192, 4096, 1, 1024]
          # - Exact: [8192, 4096, 1, 2048]
          # - Exact: [8192, 4096, 1, 4096]
          # - Exact: [8192, 4096, 1, 8192]
          # - Exact: [8192, 8192, 1, 128]
          # - Exact: [8192, 8192, 1, 256]
          # - Exact: [8192, 8192, 1, 512]
          # - Exact: [8192, 8192, 1, 1024]
          # - Exact: [8192, 8192, 1, 2048]
          # - Exact: [8192, 8192, 1, 4096]
          # - Exact: [8192, 8192, 1, 8192]

LibraryLogic:
  ScheduleName: "aquavanjaram942"
  DeviceNames: ["Device 0049", "Device 0050"]
  ArchitectureName: "gfx942"
